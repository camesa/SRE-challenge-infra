name: Build y Push de Imagenes Docker

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

# Añadir permisos necesarios
permissions:
  contents: write

jobs:
  build-y-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        servicio: [result, vote, worker]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Iniciar sesion en Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Obtener numero de version
        id: get_version
        run: |
          git fetch --tags
          VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          VERSION=$(echo $VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag $VERSION
          git push origin $VERSION

      - name: Build y push imagen Docker
        uses: docker/build-push-action@v4
        with:
          context: ./voting-app/${{ matrix.servicio }}
          push: true
          tags: |
            camesa/voting-app-${{ matrix.servicio }}:latest
            camesa/voting-app-${{ matrix.servicio }}:${{ steps.get_version.outputs.VERSION }}

      - name: Imprimir nueva versión
        run: 'echo "Nueva versión creada: ${{ steps.get_version.outputs.VERSION }}"'
